// Copyright 2015 Zeppelin
// mixins.scss


// Typography (requires function: rem-calc)
//------------------------------------------------
// @ size: pixels
// @ base: pixels (default: $font-size-300)
@function rem-calc($size, $base: $font-size-default) {
  @return ($size / $base) * 1rem;
}
@function em-calc($size, $base: $font-size-default) {
  @return ($size / $base) * 1em;
}
// @ size: pixels
@mixin font-size($size) {
  font-size: $size;
  font-size: rem-calc($size);
}


// Letter Spacing Function
// @ size:    integer (index of font-sizes list)
// @ spacing: em value (explcitly set the letter spacing property)
// @ case:    lowercase or uppercase (defaults to lowercase)
// @ unit:    em value (interval used for spacing)
@function letter-spacing($size, $spacing, $case: lowercase, $weight: 400, $unit: $font-spacing-default) {
  @if ($spacing) {
    @return $spacing;
  } @else if ($case == lowercase) {
    @return (8 - $size) * $unit;
  } @else {
    @return (9 - $size) * $unit;
  }
}

// Font (typesetting) Mixin
// @ size:    integer (index of font-sizes list)
// @ case:    lowercase or uppercase
// @ style:   normal or italic
// @ height:  integer or decimal
// @ weight:  integer
// @ family:  string or variable ("Akkurat", $font-family-primary)
// @ margin:  em or px value (sets bottom margin)
// @ spacing: em value (explicitly set the letter spacing property)
@mixin font(
  $size,
  $case:    null,
  $style:   null,
  $height:  $font-height-default,
  $weight:  $font-weight-default,
  $family:  $font-family-default,
  $margin:  $font-margin-default,
  $spacing: null) {
    font-family: $family;
    font-weight: $weight;
    font-style: $style;
    font-size: nth($font-sizes, $size);
    font-size: rem-calc(nth($font-sizes, $size));
    line-height: $height;
    text-transform: $case;
    letter-spacing: letter-spacing($size, $spacing, $case, $weight);
    margin-bottom: $margin;
}


// Animations and transitions
//------------------------------------------------
// @ args...: all timing easing
// chain transitions with a comma
@mixin transition($transitions...) {
  -webkit-transition: $transitions;
  -moz-transition: $transitions;
  -ms-transition: $transitions;
  -o-transition: $transitions;
  transition: $transitions;
}

@mixin animation($animations...) {
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -ms-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  -moz-transform: translate3d($x, $y, $z);
  -ms-transform: translate3d($x, $y, $z);
  -o-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}



// Opacity
//------------------------------------------------
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); // IE8
}
